import java.util.*;
class Main{
    public static void main(String[] args){
        Stack <Character> a = new Stack <>();
        //push
        a.push('a');
        a.push('b');
        a.push('c');
        System.out.println("the elements in the stack are "+a);
        //peek
        System.out.println("the top element in the stack is "+a.peek());
        if(!a.isEmpty()){
            System.out.println("the Stack is not empty");
        }
        else {
            System.out.println("the stack is empty");
        }
        //pop
        a.pop();
        a.pop();
        a.pop();
        if(!a.isEmpty()){
            System.out.println("the Stack is not empty");
        }
        else {
            System.out.println("the stack is empty");
        }
        //search
        int location=a.search('a');
        System.out.println("the location of a is "+location );
    }
}

output:
the elements in the stack are [a, b, c]
the top element in the stack is c
the Stack is not empty
the stack is empty
the location of a is -1
----------------------------------------------------------------------------------------------
2.parenthesis checker 

import java.util.*;

public class Checker {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter a valid input:");
        String str = sc.nextLine();
        Stack<Character> s = new Stack<>();

        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);

            if (ch == '[' || ch == '{' || ch == '(') {
                s.push(ch);
            } else if (ch == ']' || ch == '}' || ch == ')') {
                if (s.isEmpty()) {
                    System.out.println("Invalid input");
                    return;
                }
                char top = s.pop();
                if ((ch == ']' && top != '[') ||
                    (ch == '}' && top != '{') ||
                    (ch == ')' && top != '(')) {
                    System.out.println("Invalid input");
                    return;
                }
            }
        }

        if (s.isEmpty()) {
            System.out.println("Valid input");
        } else {
            System.out.println("Invalid input");
        }
    }
}

output:
Enter a valid input:
[}
Invalid input
